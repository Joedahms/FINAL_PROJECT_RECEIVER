

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Mar 12 17:54:22 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4331
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=4
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=4
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    19                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    24   000000                     
    25                           ; Generated 17/10/2023 GMT
    26                           ; 
    27                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F4331 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59   000000                     
    60                           	psect	idataCOMRAM
    61   00062C                     __pidataCOMRAM:
    62                           	callstack 0
    63                           
    64                           ;initializer for _message_start
    65   00062C  FF                 	db	255
    66   000000                     _PTPERH	set	3962
    67   000000                     _PTPERL	set	3963
    68   000000                     _PTCKPS0	set	31738
    69   000000                     _SSPEN	set	32309
    70   000000                     _SSPM3	set	32307
    71   000000                     _SSPM2	set	32306
    72   000000                     _SSPM1	set	32305
    73   000000                     _SSPM0	set	32304
    74   000000                     _CKE	set	32318
    75   000000                     _TRISC5	set	31909
    76   000000                     _TRISC7	set	31911
    77   000000                     _PTCKPS1	set	31739
    78   000000                     _PMOD0	set	31608
    79   000000                     _PWMEN2	set	31614
    80   000000                     _PWMEN1	set	31613
    81   000000                     _PEIE	set	32662
    82   000000                     _IRCF2	set	32414
    83   000000                     _IRCF1	set	32413
    84   000000                     _PDC0L	set	3961
    85   000000                     _PWMEN0	set	31612
    86   000000                     _SSPIE	set	31979
    87   000000                     _IPEN	set	32391
    88   000000                     _IRCF0	set	32412
    89   000000                     _GIE	set	32663
    90   000000                     _SSPBUF	set	4041
    91   000000                     _CKP	set	32308
    92   000000                     _SMP	set	32319
    93   000000                     _SSPIF	set	31987
    94   000000                     _LATBbits	set	3978
    95   000000                     _TRISB0	set	31896
    96   000000                     _PTEN	set	31735
    97   000000                     _TRISC4	set	31908
    98                           
    99                           ; #config settings
   100                           
   101                           	psect	cinit
   102   000598                     __pcinit:
   103                           	callstack 0
   104   000598                     start_initialization:
   105                           	callstack 0
   106   000598                     __initialization:
   107                           	callstack 0
   108                           
   109                           ; Initialize objects allocated to COMRAM (1 bytes)
   110                           ; load TBLPTR registers with __pidataCOMRAM
   111   000598  0E2C               	movlw	low __pidataCOMRAM
   112   00059A  6EF6               	movwf	tblptrl,c
   113   00059C  0E06               	movlw	high __pidataCOMRAM
   114   00059E  6EF7               	movwf	tblptrh,c
   115   0005A0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   116   0005A2  6EF8               	movwf	tblptru,c
   117   0005A4  0009               	tblrd		*+	;fetch initializer
   118   0005A6  CFF5 F02F          	movff	tablat,__pdataCOMRAM
   119                           
   120                           ; Clear objects allocated to COMRAM (13 bytes)
   121   0005AA  EE00  F022         	lfsr	0,__pbssCOMRAM
   122   0005AE  0E0D               	movlw	13
   123   0005B0                     clear_0:
   124   0005B0  6AEE               	clrf	postinc0,c
   125   0005B2  06E8               	decf	wreg,f,c
   126   0005B4  E1FD               	bnz	clear_0
   127   0005B6                     end_of_initialization:
   128                           	callstack 0
   129   0005B6                     __end_of__initialization:
   130                           	callstack 0
   131   0005B6  9030               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   132   0005B8  9230               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   133   0005BA  0100               	movlb	0
   134   0005BC  EF6B  F002         	goto	_main	;jump to C main() function
   135                           
   136                           	psect	bssCOMRAM
   137   000022                     __pbssCOMRAM:
   138                           	callstack 0
   139   000022                     _byte_received:
   140                           	callstack 0
   141   000022                     	ds	2
   142   000024                     _drive_dir_received:
   143                           	callstack 0
   144   000024                     	ds	1
   145   000025                     _adc_data_received:
   146                           	callstack 0
   147   000025                     	ds	1
   148   000026                     _message_received_flag:
   149                           	callstack 0
   150   000026                     	ds	1
   151   000027                     _message_start_flag:
   152                           	callstack 0
   153   000027                     	ds	1
   154   000028                     _drive_dirb_flag:
   155                           	callstack 0
   156   000028                     	ds	1
   157   000029                     _adc_hib_flag:
   158                           	callstack 0
   159   000029                     	ds	1
   160   00002A                     _adc_lob_flag:
   161                           	callstack 0
   162   00002A                     	ds	1
   163   00002B                     _start_test:
   164                           	callstack 0
   165   00002B                     	ds	1
   166   00002C                     _drive_dir:
   167                           	callstack 0
   168   00002C                     	ds	1
   169   00002D                     _adc_res_lo:
   170                           	callstack 0
   171   00002D                     	ds	1
   172   00002E                     _adc_res_hi:
   173                           	callstack 0
   174   00002E                     	ds	1
   175                           
   176                           	psect	dataCOMRAM
   177   00002F                     __pdataCOMRAM:
   178                           	callstack 0
   179   00002F                     _message_start:
   180                           	callstack 0
   181   00002F                     	ds	1
   182                           
   183                           	psect	cstackCOMRAM
   184   000001                     __pcstackCOMRAM:
   185                           	callstack 0
   186   000001                     ??_init_XL5:
   187   000001                     ?___wmul:
   188                           	callstack 0
   189   000001                     ?___awdiv:
   190                           	callstack 0
   191   000001                     ___wmul@multiplier:
   192                           	callstack 0
   193   000001                     ___awdiv@dividend:
   194                           	callstack 0
   195                           
   196                           ; 2 bytes @ 0x0
   197   000001                     	ds	2
   198   000003                     ___wmul@multiplicand:
   199                           	callstack 0
   200   000003                     ___awdiv@divisor:
   201                           	callstack 0
   202                           
   203                           ; 2 bytes @ 0x2
   204   000003                     	ds	2
   205   000005                     ___awdiv@counter:
   206                           	callstack 0
   207   000005                     ___wmul@product:
   208                           	callstack 0
   209                           
   210                           ; 2 bytes @ 0x4
   211   000005                     	ds	1
   212   000006                     ___awdiv@sign:
   213                           	callstack 0
   214                           
   215                           ; 1 bytes @ 0x5
   216   000006                     	ds	1
   217   000007                     ___awdiv@quotient:
   218                           	callstack 0
   219                           
   220                           ; 2 bytes @ 0x6
   221   000007                     	ds	2
   222   000009                     ?_set_throttle:
   223                           	callstack 0
   224   000009                     set_throttle@forward_flag:
   225                           	callstack 0
   226                           
   227                           ; 2 bytes @ 0x8
   228   000009                     	ds	2
   229   00000B                     set_throttle@adc_result:
   230                           	callstack 0
   231                           
   232                           ; 2 bytes @ 0xA
   233   00000B                     	ds	2
   234   00000D                     ??_set_throttle:
   235                           
   236                           ; 1 bytes @ 0xC
   237   00000D                     	ds	3
   238   000010                     set_throttle@curr_step:
   239                           	callstack 0
   240                           
   241                           ; 2 bytes @ 0xF
   242   000010                     	ds	2
   243   000012                     set_throttle@step_size:
   244                           	callstack 0
   245                           
   246                           ; 2 bytes @ 0x11
   247   000012                     	ds	2
   248   000014                     set_throttle@neutral:
   249                           	callstack 0
   250                           
   251                           ; 1 bytes @ 0x13
   252   000014                     	ds	1
   253   000015                     set_throttle@dir_div:
   254                           	callstack 0
   255                           
   256                           ; 1 bytes @ 0x14
   257   000015                     	ds	1
   258   000016                     set_throttle@i:
   259                           	callstack 0
   260                           
   261                           ; 2 bytes @ 0x15
   262   000016                     	ds	2
   263   000018                     
   264                           ; 2 bytes @ 0x17
   265   000018                     	ds	2
   266   00001A                     
   267                           ; 3 bytes @ 0x19
   268   00001A                     	ds	3
   269   00001D                     ??_main:
   270                           
   271                           ; 1 bytes @ 0x1C
   272   00001D                     	ds	2
   273   00001F                     main@adc_result:
   274                           	callstack 0
   275                           
   276                           ; 2 bytes @ 0x1E
   277   00001F                     	ds	2
   278   000021                     main@forward_flag:
   279                           	callstack 0
   280                           
   281                           ; 1 bytes @ 0x20
   282   000021                     	ds	1
   283                           
   284 ;;
   285 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   286 ;;
   287 ;; *************** function _main *****************
   288 ;; Defined at:
   289 ;;		line 103 in file "receiver_main.c"
   290 ;; Parameters:    Size  Location     Type
   291 ;;  argc            2   23[COMRAM] int 
   292 ;;  argv            3   25[COMRAM] PTR PTR unsigned char 
   293 ;; Auto vars:     Size  Location     Type
   294 ;;  adc_result      2   30[COMRAM] int 
   295 ;;  forward_flag    1   32[COMRAM] unsigned char 
   296 ;; Return value:  Size  Location     Type
   297 ;;                  2   23[COMRAM] int 
   298 ;; Registers used:
   299 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   300 ;; Tracked objects:
   301 ;;		On entry : 0/0
   302 ;;		On exit  : 0/0
   303 ;;		Unchanged: 0/0
   304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   305 ;;      Params:         5       0       0       0
   306 ;;      Locals:         3       0       0       0
   307 ;;      Temps:          2       0       0       0
   308 ;;      Totals:        10       0       0       0
   309 ;;Total ram usage:       10 bytes
   310 ;; Hardware stack levels required when called: 3
   311 ;; This function calls:
   312 ;;		_PWM_init
   313 ;;		_init_XL5
   314 ;;		_message_received
   315 ;;		_set_throttle
   316 ;;		_spi_slave_init
   317 ;; This function is called by:
   318 ;;		Startup code after reset
   319 ;; This function uses a non-reentrant model
   320 ;;
   321                           
   322                           	psect	text0
   323   0004D6                     __ptext0:
   324                           	callstack 0
   325   0004D6                     _main:
   326                           	callstack 28
   327   0004D6                     
   328                           ;receiver_main.c: 106:     IRCF0 = 0;
   329   0004D6  98D3               	bcf	4051,4,c	;volatile
   330                           
   331                           ;receiver_main.c: 107:     IRCF1 = 1;
   332   0004D8  8AD3               	bsf	4051,5,c	;volatile
   333                           
   334                           ;receiver_main.c: 108:     IRCF2 = 1;
   335   0004DA  8CD3               	bsf	4051,6,c	;volatile
   336                           
   337                           ;receiver_main.c: 111:     IPEN = 1;
   338   0004DC  8ED0               	bsf	4048,7,c	;volatile
   339                           
   340                           ;receiver_main.c: 112:     GIE = 1;
   341   0004DE  8EF2               	bsf	4082,7,c	;volatile
   342                           
   343                           ;receiver_main.c: 113:     PEIE = 1;
   344   0004E0  8CF2               	bsf	4082,6,c	;volatile
   345                           
   346                           ;receiver_main.c: 114:     SSPIE = 1;
   347   0004E2  869D               	bsf	3997,3,c	;volatile
   348   0004E4                     
   349                           ;receiver_main.c: 116:     init_XL5();
   350   0004E4  ECB4  F002         	call	_init_XL5	;wreg free
   351   0004E8                     
   352                           ;receiver_main.c: 117:     PWM_init();
   353   0004E8  ECF3  F002         	call	_PWM_init	;wreg free
   354   0004EC                     
   355                           ;receiver_main.c: 118:     spi_slave_init();
   356   0004EC  EC01  F003         	call	_spi_slave_init	;wreg free
   357   0004F0                     
   358                           ;receiver_main.c: 120:     uint8_t forward_flag = 0;
   359   0004F0  0E00               	movlw	0
   360   0004F2  6E21               	movwf	main@forward_flag^0,c
   361   0004F4                     l1119:
   362                           
   363                           ;receiver_main.c: 125:     {;receiver_main.c: 126:         if ( adc_data_received )
   364   0004F4  5025               	movf	_adc_data_received^0,w,c
   365   0004F6  B4D8               	btfsc	status,2,c
   366   0004F8  EF80  F002         	goto	u311
   367   0004FC  EF82  F002         	goto	u310
   368   000500                     u311:
   369   000500  EF98  F002         	goto	l1127
   370   000504                     u310:
   371   000504                     
   372                           ;receiver_main.c: 127:         {;receiver_main.c: 128:             adc_result = ( adc_re
      +                          s_hi << 8 ) + adc_res_lo;
   373   000504  502E               	movf	_adc_res_hi^0,w,c
   374   000506  6E1E               	movwf	(??_main+1)^0,c
   375   000508  6A1D               	clrf	??_main^0,c
   376   00050A  502D               	movf	_adc_res_lo^0,w,c
   377   00050C  241D               	addwf	??_main^0,w,c
   378   00050E  6E1F               	movwf	main@adc_result^0,c
   379   000510  0E00               	movlw	0
   380   000512  201E               	addwfc	(??_main+1)^0,w,c
   381   000514  6E20               	movwf	(main@adc_result+1)^0,c
   382   000516                     
   383                           ;receiver_main.c: 129:             PDC0L = set_throttle(forward_flag, adc_result);
   384   000516  C021  F009         	movff	main@forward_flag,set_throttle@forward_flag
   385   00051A  6A0A               	clrf	(set_throttle@forward_flag+1)^0,c
   386   00051C  C01F  F00B         	movff	main@adc_result,set_throttle@adc_result
   387   000520  C020  F00C         	movff	main@adc_result+1,set_throttle@adc_result+1
   388   000524  EC81  F001         	call	_set_throttle	;wreg free
   389   000528  5009               	movf	?_set_throttle^0,w,c
   390   00052A  6E79               	movwf	121,c	;volatile
   391   00052C                     
   392                           ;receiver_main.c: 130:             adc_data_received = 0;
   393   00052C  0E00               	movlw	0
   394   00052E  6E25               	movwf	_adc_data_received^0,c
   395   000530                     l1127:
   396                           
   397                           ;receiver_main.c: 132:         if ( drive_dir_received )
   398   000530  5024               	movf	_drive_dir_received^0,w,c
   399   000532  B4D8               	btfsc	status,2,c
   400   000534  EF9E  F002         	goto	u321
   401   000538  EFA0  F002         	goto	u320
   402   00053C                     u321:
   403   00053C  EFA4  F002         	goto	l63
   404   000540                     u320:
   405   000540                     
   406                           ;receiver_main.c: 133:         {;receiver_main.c: 134:             forward_flag = drive_
      +                          dir;
   407   000540  C02C  F021         	movff	_drive_dir,main@forward_flag
   408   000544                     
   409                           ;receiver_main.c: 135:             drive_dir_received = 0;
   410   000544  0E00               	movlw	0
   411   000546  6E24               	movwf	_drive_dir_received^0,c
   412   000548                     l63:
   413                           
   414                           ;receiver_main.c: 137:         if ( message_received_flag )
   415   000548  5026               	movf	_message_received_flag^0,w,c
   416   00054A  B4D8               	btfsc	status,2,c
   417   00054C  EFAA  F002         	goto	u331
   418   000550  EFAC  F002         	goto	u330
   419   000554                     u331:
   420   000554  EF7A  F002         	goto	l1119
   421   000558                     u330:
   422   000558                     
   423                           ;receiver_main.c: 138:         {;receiver_main.c: 139:             message_received_flag
      +                           = 0;
   424   000558  0E00               	movlw	0
   425   00055A  6E26               	movwf	_message_received_flag^0,c
   426   00055C                     
   427                           ;receiver_main.c: 140:             message_received();
   428   00055C  EC0D  F003         	call	_message_received	;wreg free
   429   000560  EF7A  F002         	goto	l1119
   430   000564  EF5C  F000         	goto	start
   431   000568                     __end_of_main:
   432                           	callstack 0
   433                           
   434 ;; *************** function _spi_slave_init *****************
   435 ;; Defined at:
   436 ;;		line 25 in file "spi.c"
   437 ;; Parameters:    Size  Location     Type
   438 ;;		None
   439 ;; Auto vars:     Size  Location     Type
   440 ;;		None
   441 ;; Return value:  Size  Location     Type
   442 ;;                  1    wreg      void 
   443 ;; Registers used:
   444 ;;		None
   445 ;; Tracked objects:
   446 ;;		On entry : 0/0
   447 ;;		On exit  : 0/0
   448 ;;		Unchanged: 0/0
   449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   450 ;;      Params:         0       0       0       0
   451 ;;      Locals:         0       0       0       0
   452 ;;      Temps:          0       0       0       0
   453 ;;      Totals:         0       0       0       0
   454 ;;Total ram usage:        0 bytes
   455 ;; Hardware stack levels used: 1
   456 ;; Hardware stack levels required when called: 1
   457 ;; This function calls:
   458 ;;		Nothing
   459 ;; This function is called by:
   460 ;;		_main
   461 ;; This function uses a non-reentrant model
   462 ;;
   463                           
   464                           	psect	text1
   465   000602                     __ptext1:
   466                           	callstack 0
   467   000602                     _spi_slave_init:
   468                           	callstack 29
   469   000602                     
   470                           ;spi.c: 27:     TRISC4 = 1;
   471   000602  8894               	bsf	3988,4,c	;volatile
   472                           
   473                           ;spi.c: 28:     TRISC7 = 0;
   474   000604  9E94               	bcf	3988,7,c	;volatile
   475                           
   476                           ;spi.c: 29:     TRISC5 = 1;
   477   000606  8A94               	bsf	3988,5,c	;volatile
   478                           
   479                           ;spi.c: 31:     SMP = 0;
   480   000608  9EC7               	bcf	4039,7,c	;volatile
   481                           
   482                           ;spi.c: 32:     CKP = 0;
   483   00060A  98C6               	bcf	4038,4,c	;volatile
   484                           
   485                           ;spi.c: 33:     CKE = 0;
   486   00060C  9CC7               	bcf	4039,6,c	;volatile
   487                           
   488                           ;spi.c: 36:     SSPM0 = 1;
   489   00060E  80C6               	bsf	4038,0,c	;volatile
   490                           
   491                           ;spi.c: 37:     SSPM1 = 0;
   492   000610  92C6               	bcf	4038,1,c	;volatile
   493                           
   494                           ;spi.c: 38:     SSPM2 = 1;
   495   000612  84C6               	bsf	4038,2,c	;volatile
   496                           
   497                           ;spi.c: 39:     SSPM3 = 0;
   498   000614  96C6               	bcf	4038,3,c	;volatile
   499                           
   500                           ;spi.c: 41:     SSPEN = 1;
   501   000616  8AC6               	bsf	4038,5,c	;volatile
   502   000618  0012               	return		;funcret
   503   00061A                     __end_of_spi_slave_init:
   504                           	callstack 0
   505                           
   506 ;; *************** function _set_throttle *****************
   507 ;; Defined at:
   508 ;;		line 193 in file "receiver_main.c"
   509 ;; Parameters:    Size  Location     Type
   510 ;;  forward_flag    2    8[COMRAM] int 
   511 ;;  adc_result      2   10[COMRAM] int 
   512 ;; Auto vars:     Size  Location     Type
   513 ;;  i               2   21[COMRAM] int 
   514 ;;  step_size       2   17[COMRAM] int 
   515 ;;  curr_step       2   15[COMRAM] int 
   516 ;;  dir_div         1   20[COMRAM] unsigned char 
   517 ;;  neutral         1   19[COMRAM] unsigned char 
   518 ;; Return value:  Size  Location     Type
   519 ;;                  2    8[COMRAM] int 
   520 ;; Registers used:
   521 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   522 ;; Tracked objects:
   523 ;;		On entry : 0/0
   524 ;;		On exit  : 0/0
   525 ;;		Unchanged: 0/0
   526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   527 ;;      Params:         4       0       0       0
   528 ;;      Locals:         8       0       0       0
   529 ;;      Temps:          3       0       0       0
   530 ;;      Totals:        15       0       0       0
   531 ;;Total ram usage:       15 bytes
   532 ;; Hardware stack levels used: 1
   533 ;; Hardware stack levels required when called: 2
   534 ;; This function calls:
   535 ;;		___awdiv
   536 ;;		___wmul
   537 ;; This function is called by:
   538 ;;		_main
   539 ;; This function uses a non-reentrant model
   540 ;;
   541                           
   542                           	psect	text2
   543   000302                     __ptext2:
   544                           	callstack 0
   545   000302                     _set_throttle:
   546                           	callstack 28
   547   000302                     
   548                           ;receiver_main.c: 197:     uint8_t dir_div = 0;
   549   000302  0E00               	movlw	0
   550   000304  6E15               	movwf	set_throttle@dir_div^0,c
   551                           
   552                           ;receiver_main.c: 199:     uint8_t neutral = 95;
   553   000306  0E5F               	movlw	95
   554   000308  6E14               	movwf	set_throttle@neutral^0,c
   555                           
   556                           ;receiver_main.c: 200:     int curr_step = 0;
   557   00030A  0E00               	movlw	0
   558   00030C  6E11               	movwf	(set_throttle@curr_step+1)^0,c
   559   00030E  0E00               	movlw	0
   560   000310  6E10               	movwf	set_throttle@curr_step^0,c
   561   000312                     
   562                           ;receiver_main.c: 202:     if ( forward_flag )
   563   000312  5009               	movf	set_throttle@forward_flag^0,w,c
   564   000314  100A               	iorwf	(set_throttle@forward_flag+1)^0,w,c
   565   000316  B4D8               	btfsc	status,2,c
   566   000318  EF90  F001         	goto	u271
   567   00031C  EF92  F001         	goto	u270
   568   000320                     u271:
   569   000320  EFA3  F001         	goto	l1081
   570   000324                     u270:
   571   000324                     
   572                           ;receiver_main.c: 203:     {;receiver_main.c: 204:         dir_div = 33;
   573   000324  0E21               	movlw	33
   574   000326  6E15               	movwf	set_throttle@dir_div^0,c
   575   000328                     l1079:
   576                           
   577                           ;receiver_main.c: 205:         step_size = ( 1 << 10 ) / dir_div;
   578   000328  0E04               	movlw	4
   579   00032A  6E02               	movwf	(___awdiv@dividend+1)^0,c
   580   00032C  0E00               	movlw	0
   581   00032E  6E01               	movwf	___awdiv@dividend^0,c
   582   000330  C015  F003         	movff	set_throttle@dir_div,___awdiv@divisor
   583   000334  6A04               	clrf	(___awdiv@divisor+1)^0,c
   584   000336  EC09  F002         	call	___awdiv	;wreg free
   585   00033A  C001  F012         	movff	?___awdiv,set_throttle@step_size
   586   00033E  C002  F013         	movff	?___awdiv+1,set_throttle@step_size+1
   587                           
   588                           ;receiver_main.c: 206:     }
   589   000342  EFA7  F001         	goto	l1085
   590   000346                     l1081:
   591                           
   592                           ;receiver_main.c: 208:     {;receiver_main.c: 209:         dir_div = 31;
   593   000346  0E1F               	movlw	31
   594   000348  6E15               	movwf	set_throttle@dir_div^0,c
   595   00034A  EF94  F001         	goto	l1079
   596   00034E                     l1085:
   597                           
   598                           ;receiver_main.c: 213:     for ( i = 1; i <= dir_div + 1; i++ )
   599   00034E  0E00               	movlw	0
   600   000350  6E17               	movwf	(set_throttle@i+1)^0,c
   601   000352  0E01               	movlw	1
   602   000354  6E16               	movwf	set_throttle@i^0,c
   603   000356  EFF2  F001         	goto	l1105
   604   00035A                     l1087:
   605                           
   606                           ;receiver_main.c: 214:     {;receiver_main.c: 215:         curr_step = i * ( step_size )
      +                          ;
   607   00035A  C016  F001         	movff	set_throttle@i,___wmul@multiplier
   608   00035E  C017  F002         	movff	set_throttle@i+1,___wmul@multiplier+1
   609   000362  C012  F003         	movff	set_throttle@step_size,___wmul@multiplicand
   610   000366  C013  F004         	movff	set_throttle@step_size+1,___wmul@multiplicand+1
   611   00036A  ECE0  F002         	call	___wmul	;wreg free
   612   00036E  C001  F010         	movff	?___wmul,set_throttle@curr_step
   613   000372  C002  F011         	movff	?___wmul+1,set_throttle@curr_step+1
   614   000376                     
   615                           ;receiver_main.c: 216:         if ( curr_step >= adc_result )
   616   000376  500B               	movf	set_throttle@adc_result^0,w,c
   617   000378  5C10               	subwf	set_throttle@curr_step^0,w,c
   618   00037A  5011               	movf	(set_throttle@curr_step+1)^0,w,c
   619   00037C  0A80               	xorlw	128
   620   00037E  6E0D               	movwf	??_set_throttle^0,c
   621   000380  500C               	movf	(set_throttle@adc_result+1)^0,w,c
   622   000382  0A80               	xorlw	128
   623   000384  580D               	subwfb	??_set_throttle^0,w,c
   624   000386  A0D8               	btfss	status,0,c
   625   000388  EFC8  F001         	goto	u281
   626   00038C  EFCA  F001         	goto	u280
   627   000390                     u281:
   628   000390  EFF0  F001         	goto	l1103
   629   000394                     u280:
   630   000394                     
   631                           ;receiver_main.c: 217:         {;receiver_main.c: 218:             if ( forward_flag == 
      +                          1 )
   632   000394  0409               	decf	set_throttle@forward_flag^0,w,c
   633   000396  100A               	iorwf	(set_throttle@forward_flag+1)^0,w,c
   634   000398  A4D8               	btfss	status,2,c
   635   00039A  EFD1  F001         	goto	u291
   636   00039E  EFD3  F001         	goto	u290
   637   0003A2                     u291:
   638   0003A2  EFE1  F001         	goto	l1099
   639   0003A6                     u290:
   640   0003A6                     
   641                           ;receiver_main.c: 219:             {;receiver_main.c: 220:                 return neutra
      +                          l + ( i - 1 );
   642   0003A6  5014               	movf	set_throttle@neutral^0,w,c
   643   0003A8  2416               	addwf	set_throttle@i^0,w,c
   644   0003AA  6E0D               	movwf	??_set_throttle^0,c
   645   0003AC  0E00               	movlw	0
   646   0003AE  2017               	addwfc	(set_throttle@i+1)^0,w,c
   647   0003B0  6E0E               	movwf	(??_set_throttle+1)^0,c
   648   0003B2  0EFF               	movlw	255
   649   0003B4  240D               	addwf	??_set_throttle^0,w,c
   650   0003B6  6E09               	movwf	?_set_throttle^0,c
   651   0003B8  0EFF               	movlw	255
   652   0003BA  200E               	addwfc	(??_set_throttle+1)^0,w,c
   653   0003BC  6E0A               	movwf	(?_set_throttle+1)^0,c
   654   0003BE  EF08  F002         	goto	l91
   655   0003C2                     l1099:
   656                           
   657                           ;receiver_main.c: 223:             {;receiver_main.c: 224:                 return neutra
      +                          l - ( i - 1);
   658   0003C2  5014               	movf	set_throttle@neutral^0,w,c
   659   0003C4  6E0D               	movwf	??_set_throttle^0,c
   660   0003C6  6A0E               	clrf	(??_set_throttle+1)^0,c
   661   0003C8  5016               	movf	set_throttle@i^0,w,c
   662   0003CA  5E0D               	subwf	??_set_throttle^0,f,c
   663   0003CC  5017               	movf	(set_throttle@i+1)^0,w,c
   664   0003CE  5A0E               	subwfb	(??_set_throttle+1)^0,f,c
   665   0003D0  0E01               	movlw	1
   666   0003D2  240D               	addwf	??_set_throttle^0,w,c
   667   0003D4  6E09               	movwf	?_set_throttle^0,c
   668   0003D6  0E00               	movlw	0
   669   0003D8  200E               	addwfc	(??_set_throttle+1)^0,w,c
   670   0003DA  6E0A               	movwf	(?_set_throttle+1)^0,c
   671   0003DC  EF08  F002         	goto	l91
   672   0003E0                     l1103:
   673                           
   674                           ;receiver_main.c: 227:     }
   675   0003E0  4A16               	infsnz	set_throttle@i^0,f,c
   676   0003E2  2A17               	incf	(set_throttle@i+1)^0,f,c
   677   0003E4                     l1105:
   678   0003E4  5015               	movf	set_throttle@dir_div^0,w,c
   679   0003E6  6E0D               	movwf	??_set_throttle^0,c
   680   0003E8  6A0E               	clrf	(??_set_throttle+1)^0,c
   681   0003EA  0E01               	movlw	1
   682   0003EC  260D               	addwf	??_set_throttle^0,f,c
   683   0003EE  0E00               	movlw	0
   684   0003F0  220E               	addwfc	(??_set_throttle+1)^0,f,c
   685   0003F2  5016               	movf	set_throttle@i^0,w,c
   686   0003F4  5C0D               	subwf	??_set_throttle^0,w,c
   687   0003F6  500E               	movf	(??_set_throttle+1)^0,w,c
   688   0003F8  0A80               	xorlw	128
   689   0003FA  6E0F               	movwf	(??_set_throttle+2)^0,c
   690   0003FC  5017               	movf	(set_throttle@i+1)^0,w,c
   691   0003FE  0A80               	xorlw	128
   692   000400  580F               	subwfb	(??_set_throttle+2)^0,w,c
   693   000402  B0D8               	btfsc	status,0,c
   694   000404  EF06  F002         	goto	u301
   695   000408  EF08  F002         	goto	u300
   696   00040C                     u301:
   697   00040C  EFAD  F001         	goto	l1087
   698   000410                     u300:
   699   000410                     l91:
   700   000410  0012               	return		;funcret
   701   000412                     __end_of_set_throttle:
   702                           	callstack 0
   703                           
   704 ;; *************** function ___wmul *****************
   705 ;; Defined at:
   706 ;;		line 15 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/Umul16.c"
   707 ;; Parameters:    Size  Location     Type
   708 ;;  multiplier      2    0[COMRAM] unsigned int 
   709 ;;  multiplicand    2    2[COMRAM] unsigned int 
   710 ;; Auto vars:     Size  Location     Type
   711 ;;  product         2    4[COMRAM] unsigned int 
   712 ;; Return value:  Size  Location     Type
   713 ;;                  2    0[COMRAM] unsigned int 
   714 ;; Registers used:
   715 ;;		wreg, status,2, status,0, prodl, prodh
   716 ;; Tracked objects:
   717 ;;		On entry : 0/0
   718 ;;		On exit  : 0/0
   719 ;;		Unchanged: 0/0
   720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   721 ;;      Params:         4       0       0       0
   722 ;;      Locals:         2       0       0       0
   723 ;;      Temps:          0       0       0       0
   724 ;;      Totals:         6       0       0       0
   725 ;;Total ram usage:        6 bytes
   726 ;; Hardware stack levels used: 1
   727 ;; Hardware stack levels required when called: 1
   728 ;; This function calls:
   729 ;;		Nothing
   730 ;; This function is called by:
   731 ;;		_set_throttle
   732 ;; This function uses a non-reentrant model
   733 ;;
   734                           
   735                           	psect	text3
   736   0005C0                     __ptext3:
   737                           	callstack 0
   738   0005C0                     ___wmul:
   739                           	callstack 28
   740   0005C0  5001               	movf	___wmul@multiplier^0,w,c
   741   0005C2  0203               	mulwf	___wmul@multiplicand^0,c
   742   0005C4  CFF3 F005          	movff	prodl,___wmul@product
   743   0005C8  CFF4 F006          	movff	prodh,___wmul@product+1
   744   0005CC  5001               	movf	___wmul@multiplier^0,w,c
   745   0005CE  0204               	mulwf	(___wmul@multiplicand+1)^0,c
   746   0005D0  50F3               	movf	243,w,c
   747   0005D2  2606               	addwf	(___wmul@product+1)^0,f,c
   748   0005D4  5002               	movf	(___wmul@multiplier+1)^0,w,c
   749   0005D6  0203               	mulwf	___wmul@multiplicand^0,c
   750   0005D8  50F3               	movf	243,w,c
   751   0005DA  2606               	addwf	(___wmul@product+1)^0,f,c
   752   0005DC  C005  F001         	movff	___wmul@product,?___wmul
   753   0005E0  C006  F002         	movff	___wmul@product+1,?___wmul+1
   754   0005E4  0012               	return		;funcret
   755   0005E6                     __end_of___wmul:
   756                           	callstack 0
   757                           
   758 ;; *************** function ___awdiv *****************
   759 ;; Defined at:
   760 ;;		line 7 in file "/opt/microchip/xc8/v2.45/pic/sources/c99/common/awdiv.c"
   761 ;; Parameters:    Size  Location     Type
   762 ;;  dividend        2    0[COMRAM] int 
   763 ;;  divisor         2    2[COMRAM] int 
   764 ;; Auto vars:     Size  Location     Type
   765 ;;  quotient        2    6[COMRAM] int 
   766 ;;  sign            1    5[COMRAM] unsigned char 
   767 ;;  counter         1    4[COMRAM] unsigned char 
   768 ;; Return value:  Size  Location     Type
   769 ;;                  2    0[COMRAM] int 
   770 ;; Registers used:
   771 ;;		wreg, status,2, status,0
   772 ;; Tracked objects:
   773 ;;		On entry : 0/0
   774 ;;		On exit  : 0/0
   775 ;;		Unchanged: 0/0
   776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   777 ;;      Params:         4       0       0       0
   778 ;;      Locals:         4       0       0       0
   779 ;;      Temps:          0       0       0       0
   780 ;;      Totals:         8       0       0       0
   781 ;;Total ram usage:        8 bytes
   782 ;; Hardware stack levels used: 1
   783 ;; Hardware stack levels required when called: 1
   784 ;; This function calls:
   785 ;;		Nothing
   786 ;; This function is called by:
   787 ;;		_set_throttle
   788 ;; This function uses a non-reentrant model
   789 ;;
   790                           
   791                           	psect	text4
   792   000412                     __ptext4:
   793                           	callstack 0
   794   000412                     ___awdiv:
   795                           	callstack 28
   796   000412  0E00               	movlw	0
   797   000414  6E06               	movwf	___awdiv@sign^0,c
   798   000416  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
   799   000418  EF12  F002         	goto	u210
   800   00041C  EF10  F002         	goto	u211
   801   000420                     u211:
   802   000420  EF18  F002         	goto	l1037
   803   000424                     u210:
   804   000424  6C03               	negf	___awdiv@divisor^0,c
   805   000426  1E04               	comf	(___awdiv@divisor+1)^0,f,c
   806   000428  B0D8               	btfsc	status,0,c
   807   00042A  2A04               	incf	(___awdiv@divisor+1)^0,f,c
   808   00042C  0E01               	movlw	1
   809   00042E  6E06               	movwf	___awdiv@sign^0,c
   810   000430                     l1037:
   811   000430  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
   812   000432  EF1F  F002         	goto	u220
   813   000436  EF1D  F002         	goto	u221
   814   00043A                     u221:
   815   00043A  EF25  F002         	goto	l1043
   816   00043E                     u220:
   817   00043E  6C01               	negf	___awdiv@dividend^0,c
   818   000440  1E02               	comf	(___awdiv@dividend+1)^0,f,c
   819   000442  B0D8               	btfsc	status,0,c
   820   000444  2A02               	incf	(___awdiv@dividend+1)^0,f,c
   821   000446  0E01               	movlw	1
   822   000448  1A06               	xorwf	___awdiv@sign^0,f,c
   823   00044A                     l1043:
   824   00044A  0E00               	movlw	0
   825   00044C  6E08               	movwf	(___awdiv@quotient+1)^0,c
   826   00044E  0E00               	movlw	0
   827   000450  6E07               	movwf	___awdiv@quotient^0,c
   828   000452  5003               	movf	___awdiv@divisor^0,w,c
   829   000454  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
   830   000456  B4D8               	btfsc	status,2,c
   831   000458  EF30  F002         	goto	u231
   832   00045C  EF32  F002         	goto	u230
   833   000460                     u231:
   834   000460  EF5A  F002         	goto	l1065
   835   000464                     u230:
   836   000464  0E01               	movlw	1
   837   000466  6E05               	movwf	___awdiv@counter^0,c
   838   000468  EF3A  F002         	goto	l1051
   839   00046C                     l1049:
   840   00046C  90D8               	bcf	status,0,c
   841   00046E  3603               	rlcf	___awdiv@divisor^0,f,c
   842   000470  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
   843   000472  2A05               	incf	___awdiv@counter^0,f,c
   844   000474                     l1051:
   845   000474  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
   846   000476  EF3F  F002         	goto	u241
   847   00047A  EF41  F002         	goto	u240
   848   00047E                     u241:
   849   00047E  EF36  F002         	goto	l1049
   850   000482                     u240:
   851   000482                     l1053:
   852   000482  90D8               	bcf	status,0,c
   853   000484  3607               	rlcf	___awdiv@quotient^0,f,c
   854   000486  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
   855   000488  5003               	movf	___awdiv@divisor^0,w,c
   856   00048A  5C01               	subwf	___awdiv@dividend^0,w,c
   857   00048C  5004               	movf	(___awdiv@divisor+1)^0,w,c
   858   00048E  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
   859   000490  A0D8               	btfss	status,0,c
   860   000492  EF4D  F002         	goto	u251
   861   000496  EF4F  F002         	goto	u250
   862   00049A                     u251:
   863   00049A  EF54  F002         	goto	l1061
   864   00049E                     u250:
   865   00049E  5003               	movf	___awdiv@divisor^0,w,c
   866   0004A0  5E01               	subwf	___awdiv@dividend^0,f,c
   867   0004A2  5004               	movf	(___awdiv@divisor+1)^0,w,c
   868   0004A4  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
   869   0004A6  8007               	bsf	___awdiv@quotient^0,0,c
   870   0004A8                     l1061:
   871   0004A8  90D8               	bcf	status,0,c
   872   0004AA  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
   873   0004AC  3203               	rrcf	___awdiv@divisor^0,f,c
   874   0004AE  2E05               	decfsz	___awdiv@counter^0,f,c
   875   0004B0  EF41  F002         	goto	l1053
   876   0004B4                     l1065:
   877   0004B4  5006               	movf	___awdiv@sign^0,w,c
   878   0004B6  B4D8               	btfsc	status,2,c
   879   0004B8  EF60  F002         	goto	u261
   880   0004BC  EF62  F002         	goto	u260
   881   0004C0                     u261:
   882   0004C0  EF66  F002         	goto	l1069
   883   0004C4                     u260:
   884   0004C4  6C07               	negf	___awdiv@quotient^0,c
   885   0004C6  1E08               	comf	(___awdiv@quotient+1)^0,f,c
   886   0004C8  B0D8               	btfsc	status,0,c
   887   0004CA  2A08               	incf	(___awdiv@quotient+1)^0,f,c
   888   0004CC                     l1069:
   889   0004CC  C007  F001         	movff	___awdiv@quotient,?___awdiv
   890   0004D0  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
   891   0004D4  0012               	return		;funcret
   892   0004D6                     __end_of___awdiv:
   893                           	callstack 0
   894                           
   895 ;; *************** function _message_received *****************
   896 ;; Defined at:
   897 ;;		line 231 in file "receiver_main.c"
   898 ;; Parameters:    Size  Location     Type
   899 ;;		None
   900 ;; Auto vars:     Size  Location     Type
   901 ;;		None
   902 ;; Return value:  Size  Location     Type
   903 ;;                  1    wreg      void 
   904 ;; Registers used:
   905 ;;		wreg, status,2
   906 ;; Tracked objects:
   907 ;;		On entry : 0/0
   908 ;;		On exit  : 0/0
   909 ;;		Unchanged: 0/0
   910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   911 ;;      Params:         0       0       0       0
   912 ;;      Locals:         0       0       0       0
   913 ;;      Temps:          0       0       0       0
   914 ;;      Totals:         0       0       0       0
   915 ;;Total ram usage:        0 bytes
   916 ;; Hardware stack levels used: 1
   917 ;; Hardware stack levels required when called: 1
   918 ;; This function calls:
   919 ;;		Nothing
   920 ;; This function is called by:
   921 ;;		_main
   922 ;; This function uses a non-reentrant model
   923 ;;
   924                           
   925                           	psect	text5
   926   00061A                     __ptext5:
   927                           	callstack 0
   928   00061A                     _message_received:
   929                           	callstack 29
   930   00061A                     
   931                           ;receiver_main.c: 233:     adc_lob_flag = 0;
   932   00061A  0E00               	movlw	0
   933   00061C  6E2A               	movwf	_adc_lob_flag^0,c
   934                           
   935                           ;receiver_main.c: 234:     adc_hib_flag = 0;
   936   00061E  0E00               	movlw	0
   937   000620  6E29               	movwf	_adc_hib_flag^0,c
   938                           
   939                           ;receiver_main.c: 235:     drive_dirb_flag = 0;
   940   000622  0E00               	movlw	0
   941   000624  6E28               	movwf	_drive_dirb_flag^0,c
   942                           
   943                           ;receiver_main.c: 236:     message_start_flag = 0;
   944   000626  0E00               	movlw	0
   945   000628  6E27               	movwf	_message_start_flag^0,c
   946   00062A  0012               	return		;funcret
   947   00062C                     __end_of_message_received:
   948                           	callstack 0
   949                           
   950 ;; *************** function _init_XL5 *****************
   951 ;; Defined at:
   952 ;;		line 7 in file "xl5.c"
   953 ;; Parameters:    Size  Location     Type
   954 ;;		None
   955 ;; Auto vars:     Size  Location     Type
   956 ;;		None
   957 ;; Return value:  Size  Location     Type
   958 ;;                  1    wreg      void 
   959 ;; Registers used:
   960 ;;		wreg
   961 ;; Tracked objects:
   962 ;;		On entry : 0/0
   963 ;;		On exit  : 0/0
   964 ;;		Unchanged: 0/0
   965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   966 ;;      Params:         0       0       0       0
   967 ;;      Locals:         0       0       0       0
   968 ;;      Temps:          2       0       0       0
   969 ;;      Totals:         2       0       0       0
   970 ;;Total ram usage:        2 bytes
   971 ;; Hardware stack levels used: 1
   972 ;; Hardware stack levels required when called: 1
   973 ;; This function calls:
   974 ;;		Nothing
   975 ;; This function is called by:
   976 ;;		_main
   977 ;; This function uses a non-reentrant model
   978 ;;
   979                           
   980                           	psect	text6
   981   000568                     __ptext6:
   982                           	callstack 0
   983   000568                     _init_XL5:
   984                           	callstack 29
   985   000568                     
   986                           ;xl5.c: 9:     TRISB0 = 0;
   987   000568  9093               	bcf	3987,0,c	;volatile
   988                           
   989                           ;xl5.c: 10:     LATBbits.LATB0 = 0;
   990   00056A  908A               	bcf	138,0,c	;volatile
   991                           
   992                           ;xl5.c: 11:     LATBbits.LATB0 = 1;
   993   00056C  808A               	bsf	138,0,c	;volatile
   994   00056E                     
   995                           ;xl5.c: 12:     _delay((unsigned long)((70)*(4000000/4000.0)));
   996   00056E  0E5B               	movlw	91
   997   000570  6E01               	movwf	??_init_XL5^0,c
   998   000572  0EE8               	movlw	232
   999   000574                     u347:
  1000   000574  2EE8               	decfsz	wreg,f,c
  1001   000576  D7FE               	bra	u347
  1002   000578  2E01               	decfsz	??_init_XL5^0,f,c
  1003   00057A  D7FC               	bra	u347
  1004   00057C                     
  1005                           ;xl5.c: 13:     LATBbits.LATB0 = 0;
  1006   00057C  908A               	bcf	138,0,c	;volatile
  1007                           
  1008                           ;xl5.c: 14:     _delay((unsigned long)((412)*(4000000/4000.0)));
  1009   00057E  0E03               	movlw	3
  1010   000580  6E02               	movwf	(??_init_XL5+1)^0,c
  1011   000582  0E18               	movlw	24
  1012   000584  6E01               	movwf	??_init_XL5^0,c
  1013   000586  0E0C               	movlw	12
  1014   000588                     u357:
  1015   000588  2EE8               	decfsz	wreg,f,c
  1016   00058A  D7FE               	bra	u357
  1017   00058C  2E01               	decfsz	??_init_XL5^0,f,c
  1018   00058E  D7FC               	bra	u357
  1019   000590  2E02               	decfsz	(??_init_XL5+1)^0,f,c
  1020   000592  D7FA               	bra	u357
  1021   000594  D000               	nop2	
  1022   000596  0012               	return		;funcret
  1023   000598                     __end_of_init_XL5:
  1024                           	callstack 0
  1025                           
  1026 ;; *************** function _PWM_init *****************
  1027 ;; Defined at:
  1028 ;;		line 5 in file "pc_pwm.c"
  1029 ;; Parameters:    Size  Location     Type
  1030 ;;		None
  1031 ;; Auto vars:     Size  Location     Type
  1032 ;;		None
  1033 ;; Return value:  Size  Location     Type
  1034 ;;                  1    wreg      void 
  1035 ;; Registers used:
  1036 ;;		wreg, status,2
  1037 ;; Tracked objects:
  1038 ;;		On entry : 0/0
  1039 ;;		On exit  : 0/0
  1040 ;;		Unchanged: 0/0
  1041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1042 ;;      Params:         0       0       0       0
  1043 ;;      Locals:         0       0       0       0
  1044 ;;      Temps:          0       0       0       0
  1045 ;;      Totals:         0       0       0       0
  1046 ;;Total ram usage:        0 bytes
  1047 ;; Hardware stack levels used: 1
  1048 ;; Hardware stack levels required when called: 1
  1049 ;; This function calls:
  1050 ;;		Nothing
  1051 ;; This function is called by:
  1052 ;;		_main
  1053 ;; This function uses a non-reentrant model
  1054 ;;
  1055                           
  1056                           	psect	text7
  1057   0005E6                     __ptext7:
  1058                           	callstack 0
  1059   0005E6                     _PWM_init:
  1060                           	callstack 29
  1061   0005E6                     
  1062                           ;pc_pwm.c: 7:     PWMEN0 = 0;
  1063   0005E6  986F               	bcf	3951,4,c	;volatile
  1064                           
  1065                           ;pc_pwm.c: 8:     PWMEN1 = 1;
  1066   0005E8  8A6F               	bsf	3951,5,c	;volatile
  1067                           
  1068                           ;pc_pwm.c: 9:     PWMEN2 = 0;
  1069   0005EA  9C6F               	bcf	3951,6,c	;volatile
  1070                           
  1071                           ;pc_pwm.c: 11:     PMOD0 = 1;
  1072   0005EC  806F               	bsf	3951,0,c	;volatile
  1073                           
  1074                           ;pc_pwm.c: 14:     PTCKPS0 = 1;
  1075   0005EE  847F               	bsf	3967,2,c	;volatile
  1076                           
  1077                           ;pc_pwm.c: 15:     PTCKPS1 = 1;
  1078   0005F0  867F               	bsf	3967,3,c	;volatile
  1079   0005F2                     
  1080                           ;pc_pwm.c: 19:     PTPERL = 0b10011011;
  1081   0005F2  0E9B               	movlw	155
  1082   0005F4  6E7B               	movwf	123,c	;volatile
  1083                           
  1084                           ;pc_pwm.c: 20:     PTPERH = 0b00000000;
  1085   0005F6  0E00               	movlw	0
  1086   0005F8  6E7A               	movwf	122,c	;volatile
  1087                           
  1088                           ;pc_pwm.c: 22:     PDC0L = 0b01011111;
  1089   0005FA  0E5F               	movlw	95
  1090   0005FC  6E79               	movwf	121,c	;volatile
  1091   0005FE                     
  1092                           ;pc_pwm.c: 24:     PTEN = 1;
  1093   0005FE  8E7E               	bsf	3966,7,c	;volatile
  1094   000600  0012               	return		;funcret
  1095   000602                     __end_of_PWM_init:
  1096                           	callstack 0
  1097                           
  1098 ;; *************** function _h_isr *****************
  1099 ;; Defined at:
  1100 ;;		line 147 in file "receiver_main.c"
  1101 ;; Parameters:    Size  Location     Type
  1102 ;;		None
  1103 ;; Auto vars:     Size  Location     Type
  1104 ;;		None
  1105 ;; Return value:  Size  Location     Type
  1106 ;;                  1    wreg      void 
  1107 ;; Registers used:
  1108 ;;		wreg, status,2, status,0
  1109 ;; Tracked objects:
  1110 ;;		On entry : 0/0
  1111 ;;		On exit  : 0/0
  1112 ;;		Unchanged: 0/0
  1113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1114 ;;      Params:         0       0       0       0
  1115 ;;      Locals:         0       0       0       0
  1116 ;;      Temps:          0       0       0       0
  1117 ;;      Totals:         0       0       0       0
  1118 ;;Total ram usage:        0 bytes
  1119 ;; Hardware stack levels used: 1
  1120 ;; This function calls:
  1121 ;;		Nothing
  1122 ;; This function is called by:
  1123 ;;		Interrupt level 2
  1124 ;; This function uses a non-reentrant model
  1125 ;;
  1126                           
  1127                           	psect	intcode
  1128   000008                     __pintcode:
  1129                           	callstack 0
  1130   000008                     _h_isr:
  1131                           	callstack 28
  1132                           
  1133                           ;incstack = 0
  1134   000008  8230               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1135   00000A                     
  1136                           ;receiver_main.c: 149:     if ( SSPIE && SSPIF )
  1137   00000A  A69D               	btfss	3997,3,c	;volatile
  1138   00000C  EF0A  F000         	goto	i2u14_41
  1139   000010  EF0C  F000         	goto	i2u14_40
  1140   000014                     i2u14_41:
  1141   000014  EF5A  F000         	goto	i2l75
  1142   000018                     i2u14_40:
  1143   000018  A69E               	btfss	3998,3,c	;volatile
  1144   00001A  EF11  F000         	goto	i2u15_41
  1145   00001E  EF13  F000         	goto	i2u15_40
  1146   000022                     i2u15_41:
  1147   000022  EF5A  F000         	goto	i2l75
  1148   000026                     i2u15_40:
  1149   000026                     
  1150                           ;receiver_main.c: 150:     {;receiver_main.c: 151:         if ( !message_start_flag )
  1151   000026  5027               	movf	_message_start_flag^0,w,c
  1152   000028  A4D8               	btfss	status,2,c
  1153   00002A  EF19  F000         	goto	i2u16_41
  1154   00002E  EF1B  F000         	goto	i2u16_40
  1155   000032                     i2u16_41:
  1156   000032  EF2C  F000         	goto	i2l989
  1157   000036                     i2u16_40:
  1158   000036                     
  1159                           ;receiver_main.c: 152:         {;receiver_main.c: 153:             if ( SSPBUF == 0b1111
      +                          1111 )
  1160   000036  28C9               	incf	201,w,c	;volatile
  1161   000038  A4D8               	btfss	status,2,c
  1162   00003A  EF21  F000         	goto	i2u17_41
  1163   00003E  EF23  F000         	goto	i2u17_40
  1164   000042                     i2u17_41:
  1165   000042  EF28  F000         	goto	i2l985
  1166   000046                     i2u17_40:
  1167   000046                     
  1168                           ;receiver_main.c: 154:             {;receiver_main.c: 155:                 message_start
      +                          _flag = 1;
  1169   000046  0E01               	movlw	1
  1170   000048  6E27               	movwf	_message_start_flag^0,c
  1171   00004A                     i2l979:
  1172                           
  1173                           ;receiver_main.c: 156:                 SSPIF = 0;
  1174   00004A  969E               	bcf	3998,3,c	;volatile
  1175   00004C  EF5A  F000         	goto	i2l75
  1176   000050                     i2l985:
  1177                           
  1178                           ;receiver_main.c: 160:             {;receiver_main.c: 161:                 SSPBUF = 0b00
      +                          000000;
  1179   000050  0E00               	movlw	0
  1180   000052  6EC9               	movwf	201,c	;volatile
  1181   000054  EF5A  F000         	goto	i2l75
  1182   000058                     i2l989:
  1183   000058  502A               	movf	_adc_lob_flag^0,w,c
  1184   00005A  A4D8               	btfss	status,2,c
  1185   00005C  EF32  F000         	goto	i2u18_41
  1186   000060  EF34  F000         	goto	i2u18_40
  1187   000064                     i2u18_41:
  1188   000064  EF3A  F000         	goto	i2l1001
  1189   000068                     i2u18_40:
  1190   000068                     
  1191                           ;receiver_main.c: 166:         {;receiver_main.c: 167:             adc_res_lo = SSPBUF;
  1192   000068  CFC9 F02D          	movff	4041,_adc_res_lo	;volatile
  1193   00006C                     
  1194                           ;receiver_main.c: 168:             adc_lob_flag = 1;
  1195   00006C  0E01               	movlw	1
  1196   00006E  6E2A               	movwf	_adc_lob_flag^0,c
  1197   000070  EF25  F000         	goto	i2l979
  1198   000074                     i2l1001:
  1199   000074  5029               	movf	_adc_hib_flag^0,w,c
  1200   000076  A4D8               	btfss	status,2,c
  1201   000078  EF40  F000         	goto	i2u19_41
  1202   00007C  EF42  F000         	goto	i2u19_40
  1203   000080                     i2u19_41:
  1204   000080  EF4A  F000         	goto	i2l1013
  1205   000084                     i2u19_40:
  1206   000084                     
  1207                           ;receiver_main.c: 173:         {;receiver_main.c: 174:             adc_res_hi = SSPBUF;
  1208   000084  CFC9 F02E          	movff	4041,_adc_res_hi	;volatile
  1209   000088                     
  1210                           ;receiver_main.c: 175:             adc_hib_flag = 1;
  1211   000088  0E01               	movlw	1
  1212   00008A  6E29               	movwf	_adc_hib_flag^0,c
  1213                           
  1214                           ;receiver_main.c: 176:             adc_data_received = 1;
  1215   00008C  0E01               	movlw	1
  1216   00008E  6E25               	movwf	_adc_data_received^0,c
  1217   000090  EF25  F000         	goto	i2l979
  1218   000094                     i2l1013:
  1219   000094  5028               	movf	_drive_dirb_flag^0,w,c
  1220   000096  A4D8               	btfss	status,2,c
  1221   000098  EF50  F000         	goto	i2u20_41
  1222   00009C  EF52  F000         	goto	i2u20_40
  1223   0000A0                     i2u20_41:
  1224   0000A0  EF5A  F000         	goto	i2l75
  1225   0000A4                     i2u20_40:
  1226   0000A4                     
  1227                           ;receiver_main.c: 181:         {;receiver_main.c: 182:             drive_dir = SSPBUF;
  1228   0000A4  CFC9 F02C          	movff	4041,_drive_dir	;volatile
  1229   0000A8                     
  1230                           ;receiver_main.c: 184:             message_received_flag = 1;
  1231   0000A8  0E01               	movlw	1
  1232   0000AA  6E26               	movwf	_message_received_flag^0,c
  1233                           
  1234                           ;receiver_main.c: 185:             drive_dir_received = 1;
  1235   0000AC  0E01               	movlw	1
  1236   0000AE  6E24               	movwf	_drive_dir_received^0,c
  1237   0000B0  EF25  F000         	goto	i2l979
  1238   0000B4                     i2l75:
  1239   0000B4  9230               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1240   0000B6  0011               	retfie		f
  1241   0000B8                     __end_of_h_isr:
  1242                           	callstack 0
  1243                           
  1244                           	psect	smallconst
  1245   000300                     __psmallconst:
  1246                           	callstack 0
  1247   000300  00                 	db	0
  1248   000301  00                 	db	0	; dummy byte at the end
  1249   000000                     
  1250                           	psect	rparam
  1251   000000                     
  1252                           	psect	temp
  1253   000030                     btemp:
  1254                           	callstack 0
  1255   000030                     	ds	1
  1256   000000                     int$flags	set	btemp
  1257   000000                     wtemp8	set	btemp+1
  1258   000000                     ttemp5	set	btemp+1
  1259   000000                     ttemp6	set	btemp+4
  1260   000000                     ttemp7	set	btemp+8
  1261                           
  1262                           	psect	config
  1263                           
  1264                           ; Padding undefined space
  1265   300000                     	org	3145728
  1266   300000  FF                 	db	255
  1267                           
  1268                           ;Config register CONFIG1H @ 0x300001
  1269                           ;	Oscillator Selection bits
  1270                           ;	OSC = IRC, Internal oscillator block, CLKO function on RA6 and port function on RA7
  1271                           ;	Fail-Safe Clock Monitor Enable bit
  1272                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  1273                           ;	Internal External Oscillator Switchover bit
  1274                           ;	IESO = ON, Internal External Switchover mode enabled
  1275   300001                     	org	3145729
  1276   300001  C9                 	db	201
  1277                           
  1278                           ;Config register CONFIG2L @ 0x300002
  1279                           ;	Power-up Timer Enable bit
  1280                           ;	PWRTEN = ON, PWRT enabled
  1281                           ;	Brown-out Reset Enable bits
  1282                           ;	BOREN = ON, Brown-out Reset enabled
  1283                           ;	Brown Out Reset Voltage bits
  1284                           ;	BORV = 0x3, unprogrammed default
  1285   300002                     	org	3145730
  1286   300002  0E                 	db	14
  1287                           
  1288                           ;Config register CONFIG2H @ 0x300003
  1289                           ;	Watchdog Timer Enable bit
  1290                           ;	WDTEN = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1291                           ;	Watchdog Timer Postscale Select bits
  1292                           ;	WDPS = 32768, 1:32768
  1293                           ;	Watchdog Timer Window Enable bit
  1294                           ;	WINEN = OFF, WDT window disabled
  1295   300003                     	org	3145731
  1296   300003  3E                 	db	62
  1297                           
  1298                           ;Config register CONFIG3L @ 0x300004
  1299                           ;	PWM output pins Reset state control
  1300                           ;	PWMPIN = OFF, PWM outputs disabled upon Reset (default)
  1301                           ;	Low-Side Transistors Polarity
  1302                           ;	LPOL = HIGH, PWM0, 2, 4 and 6 are active-high
  1303                           ;	High-Side Transistors Polarity
  1304                           ;	HPOL = HIGH, PWM1, 3, 5 and 7 are active-high
  1305                           ;	Timer1 Oscillator MUX
  1306                           ;	T1OSCMX = ON, Low-power Timer1 operation when microcontroller is in Sleep mode
  1307   300004                     	org	3145732
  1308   300004  3C                 	db	60
  1309                           
  1310                           ;Config register CONFIG3H @ 0x300005
  1311                           ;	FLTA MUX bit
  1312                           ;	FLTAMX = RC1, FLTA input is multiplexed with RC1
  1313                           ;	SSP I/O MUX bit
  1314                           ;	SSPMX = RC7, SCK/SCL clocks and SDA/SDI data are multiplexed with RC5 and RC4, respect
      +                          ively. SDO output is multiplexed with RC7.
  1315                           ;	PWM4 MUX bit
  1316                           ;	PWM4MX = RB5, PWM4 output is multiplexed with RB5
  1317                           ;	TMR0/T5CKI External clock MUX bit
  1318                           ;	EXCLKMX = RC3, TMR0/T5CKI external clock input is multiplexed with RC3
  1319                           ;	MCLR Pin Enable bit
  1320                           ;	MCLRE = ON, Enabled
  1321   300005                     	org	3145733
  1322   300005  9D                 	db	157
  1323                           
  1324                           ;Config register CONFIG4L @ 0x300006
  1325                           ;	Stack Full/Underflow Reset Enable bit
  1326                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1327                           ;	Low-Voltage ICSP Enable bit
  1328                           ;	LVP = OFF, Low-voltage ICSP disabled
  1329                           ;	Background Debugger Enable bit
  1330                           ;	DEBUG = 0x1, unprogrammed default
  1331   300006                     	org	3145734
  1332   300006  81                 	db	129
  1333                           
  1334                           ; Padding undefined space
  1335   300007                     	org	3145735
  1336   300007  FF                 	db	255
  1337                           
  1338                           ;Config register CONFIG5L @ 0x300008
  1339                           ;	Code Protection bit
  1340                           ;	CP0 = OFF, Block 0 (000200-000FFFh) not code-protected
  1341                           ;	Code Protection bit
  1342                           ;	CP1 = OFF, Block 1 (001000-001FFF) not code-protected
  1343   300008                     	org	3145736
  1344   300008  0F                 	db	15
  1345                           
  1346                           ;Config register CONFIG5H @ 0x300009
  1347                           ;	Boot Block Code Protection bit
  1348                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code-protected
  1349                           ;	Data EEPROM Code Protection bit
  1350                           ;	CPD = OFF, Data EEPROM not code-protected
  1351   300009                     	org	3145737
  1352   300009  C0                 	db	192
  1353                           
  1354                           ;Config register CONFIG6L @ 0x30000A
  1355                           ;	Write Protection bit
  1356                           ;	WRT0 = OFF, Block 0 (000200-000FFFh) not write-protected
  1357                           ;	Write Protection bit
  1358                           ;	WRT1 = OFF, Block 1 (001000-001FFF) not write-protected
  1359   30000A                     	org	3145738
  1360   30000A  0F                 	db	15
  1361                           
  1362                           ;Config register CONFIG6H @ 0x30000B
  1363                           ;	Configuration Register Write Protection bit
  1364                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1365                           ;	Boot Block Write Protection bit
  1366                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write-protected
  1367                           ;	Data EEPROM Write Protection bit
  1368                           ;	WRTD = OFF, Data EEPROM not write-protected
  1369   30000B                     	org	3145739
  1370   30000B  E0                 	db	224
  1371                           
  1372                           ;Config register CONFIG7L @ 0x30000C
  1373                           ;	Table Read Protection bit
  1374                           ;	EBTR0 = OFF, Block 0 (000200-000FFFh) not protected from table reads executed in other
      +                           blocks
  1375                           ;	Table Read Protection bit
  1376                           ;	EBTR1 = OFF, Block 1 (001000-001FFF) not protected from table reads executed in other 
      +                          blocks
  1377   30000C                     	org	3145740
  1378   30000C  0F                 	db	15
  1379                           
  1380                           ;Config register CONFIG7H @ 0x30000D
  1381                           ;	Boot Block Table Read Protection bit
  1382                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from table reads executed in ot
      +                          her blocks
  1383   30000D                     	org	3145741
  1384   30000D  40                 	db	64
  1385                           tosu	equ	0xFFF
  1386                           tosh	equ	0xFFE
  1387                           tosl	equ	0xFFD
  1388                           stkptr	equ	0xFFC
  1389                           pclatu	equ	0xFFB
  1390                           pclath	equ	0xFFA
  1391                           pcl	equ	0xFF9
  1392                           tblptru	equ	0xFF8
  1393                           tblptrh	equ	0xFF7
  1394                           tblptrl	equ	0xFF6
  1395                           tablat	equ	0xFF5
  1396                           prodh	equ	0xFF4
  1397                           prodl	equ	0xFF3
  1398                           indf0	equ	0xFEF
  1399                           postinc0	equ	0xFEE
  1400                           postdec0	equ	0xFED
  1401                           preinc0	equ	0xFEC
  1402                           plusw0	equ	0xFEB
  1403                           fsr0h	equ	0xFEA
  1404                           fsr0l	equ	0xFE9
  1405                           wreg	equ	0xFE8
  1406                           indf1	equ	0xFE7
  1407                           postinc1	equ	0xFE6
  1408                           postdec1	equ	0xFE5
  1409                           preinc1	equ	0xFE4
  1410                           plusw1	equ	0xFE3
  1411                           fsr1h	equ	0xFE2
  1412                           fsr1l	equ	0xFE1
  1413                           bsr	equ	0xFE0
  1414                           indf2	equ	0xFDF
  1415                           postinc2	equ	0xFDE
  1416                           postdec2	equ	0xFDD
  1417                           preinc2	equ	0xFDC
  1418                           plusw2	equ	0xFDB
  1419                           fsr2h	equ	0xFDA
  1420                           fsr2l	equ	0xFD9
  1421                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     33      47
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_set_throttle
    _set_throttle->___awdiv

Critical Paths under _h_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _h_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _h_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _h_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10     5      5    1434
                                             23 COMRAM    10     5      5
                           _PWM_init
                           _init_XL5
                   _message_received
                       _set_throttle
                     _spi_slave_init
 ---------------------------------------------------------------------------------
 (1) _spi_slave_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_throttle                                        15    11      4    1386
                                              8 COMRAM    15    11      4
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _message_received                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_XL5                                             2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _PWM_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _h_isr                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM_init
   _init_XL5
   _message_received
   _set_throttle
     ___awdiv
     ___wmul
   _spi_slave_init

 _h_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      22        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     21      2F       1       50.0%
BITBIGSFRllhll      27      0       0      14        0.0%
BITBIGSFRhl         1E      0       0      10        0.0%
BITBIGSFRlllll       F      0       0      20        0.0%
BITBIGSFRhh          D      0       0       9        0.0%
BITBIGSFRlllhhl      A      0       0      17        0.0%
BITBIGSFRllllh       9      0       0      19        0.0%
BITBIGSFRlllhhl      8      0       0      16        0.0%
BITBIGSFRlllhhh      8      0       0      15        0.0%
BITBIGSFRllhh        6      0       0      12        0.0%
BITBIGSFRlllhlh      2      0       0      18        0.0%
BITBIGSFRlh          2      0       0      11        0.0%
BITBIGSFRllhlh       1      0       0      13        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2F      21        0.0%
DATA                 0      0      2F      23        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Mar 12 17:54:22 2024

                      l63 0548                        l91 0410                        l96 062A  
            ___awdiv@sign 0006       ___wmul@multiplicand 0003                       l132 0596  
                     l119 0600                       l163 0618                       l166 05E4  
                     l397 04D4                       l901 0602                       _CKE 7E3E  
                     l937 061A                       l891 056E                       l893 057C  
                     l895 05E6                       l897 05F2                       l889 0568  
                     _CKP 7E34                       l899 05FE                       _GIE 7F97  
                     u210 0424                       u211 0420                       u220 043E  
                     u300 0410                       u221 043A                       u301 040C  
                     u230 0464                       u310 0504                       u231 0460  
                     u311 0500                       u240 0482                       u320 0540  
                     u241 047E                       u321 053C                       u250 049E  
                     u330 0558                       u251 049A                       u331 0554  
                     u260 04C4                       u261 04C0                       u270 0324  
                     u271 0320                       u280 0394                       u281 0390  
                     u290 03A6                       u347 0574                       u291 03A2  
                     u357 0588                       _SMP 7E3F                       wreg 0FE8  
                    l1031 0416                      l1023 05C0                      l1103 03E0  
                    l1111 04E8                      l1041 0446                      l1033 0424  
                    l1025 05DC                      l1105 03E4                      l1121 0504  
                    l1113 04EC                      l1051 0474                      l1043 044A  
                    l1035 042C                      l1131 0544                      l1123 0516  
                    l1115 04F0                      l1107 04D6                      l1061 04A8  
                    l1053 0482                      l1045 0452                      l1037 0430  
                    l1029 0412                      l1133 0558                      l1125 052C  
                    l1117 04F4                      l1109 04E4                      l1063 04AE  
                    l1055 0488                      l1047 0464                      l1039 043E  
                    l1135 055C                      l1127 0530                      l1119 04F4  
                    l1057 049E                      l1049 046C                      l1065 04B4  
                    l1081 0346                      l1073 0302                      l1129 0540  
                    l1067 04C4                      l1059 04A6                      l1091 0394  
                    l1075 0312                      l1069 04CC                      l1093 03A6  
                    l1085 034E                      l1077 0324                      l1087 035A  
                    l1079 0328                      l1089 0376                      l1099 03C2  
         ?_spi_slave_init 0001                      _IPEN 7E87                      _PEIE 7F96  
                    i2l75 00B4                      _PTEN 7BF7                      _main 04D6  
                    btemp 0030                      prodh 0FF4                      prodl 0FF3  
                    start 00B8              ___param_bank 0000              _adc_hib_flag 0029  
                   ?_main 0018           __end_of___awdiv 04D6           ___awdiv@divisor 0003  
                   _PDC0L 0F79                     _IRCF0 7E9C                     _IRCF1 7E9D  
                   _IRCF2 7E9E                     i2l971 0018           ___awdiv@counter 0005  
                   i2l973 0026                     i2l991 0068                     i2l975 0036  
                   i2l993 006C                     i2l977 0046                     i2l985 0050  
                   i2l969 000A                     i2l979 004A                     i2l989 0058  
                   _PMOD0 7B78                     _SSPM0 7E30                     _SSPM1 7E31  
                   _SSPM2 7E32                     _SSPM3 7E33                     _SSPIE 7CEB  
                   _SSPIF 7CF3                     _SSPEN 7E35              _adc_lob_flag 002A  
                   _h_isr 0008                     tablat 0FF5          __end_of_PWM_init 0602  
                   ttemp5 0031                     ttemp6 0034                     ttemp7 0038  
                   status 0FD8                     wtemp8 0031           __initialization 0598  
            __end_of_main 0568                    ??_main 001D             __activetblptr 0000  
                  ?_h_isr 0001          ___awdiv@dividend 0001       set_throttle@dir_div 0015  
                  i2l1001 0074                    i2l1003 0084                    i2l1005 0088  
                  i2l1013 0094                    i2l1015 00A4                    i2l1017 00A8  
                  _PWMEN0 7B7C                    _PWMEN1 7B7D                    _PWMEN2 7B7E  
                  _PTPERH 0F7A                    _PTPERL 0F7B                    _TRISB0 7C98  
                  _TRISC4 7CA4                    _TRISC5 7CA5                    _TRISC7 7CA7  
                  _SSPBUF 0FC9       set_throttle@neutral 0014                    ___wmul 05C0  
               ??___awdiv 0005          __end_of_init_XL5 0598                    clear_0 05B0  
        ___awdiv@quotient 0007                    isa$std 0001              __pdataCOMRAM 002F  
            __mediumconst 0000                    tblptrh 0FF7                    tblptrl 0FF6  
                  tblptru 0FF8            main@adc_result 001F                __accesstop 0060  
 __end_of__initialization 05B6             ___rparam_used 0001            __pcstackCOMRAM 0001  
           _byte_received 0022             __end_of_h_isr 00B8                _adc_res_hi 002E  
              _adc_res_lo 002D                 ?_PWM_init 0001          ??_spi_slave_init 0001  
                 ??_h_isr 0001                   ?___wmul 0001    set_throttle@adc_result 000B  
              ??_PWM_init 0001                   i2u20_40 00A4                   i2u20_41 00A0  
                 i2u14_40 0018                   i2u14_41 0014                   i2u15_40 0026  
                 i2u15_41 0022                   i2u16_40 0036                   i2u16_41 0032  
                 i2u17_40 0046                   i2u17_41 0042                   i2u18_40 0068  
                 i2u18_41 0064                   i2u19_40 0084                   i2u19_41 0080  
                 _PTCKPS0 7BFA                   _PTCKPS1 7BFB     _message_received_flag 0026  
               ?_init_XL5 0001                   __Hparam 0000                   __Lparam 0000  
                 ___awdiv 0412              __psmallconst 0300                   __pcinit 0598  
                 __ramtop 0300          _message_received 061A                   __ptext0 04D6  
                 __ptext1 0602                   __ptext2 0302                   __ptext3 05C0  
                 __ptext4 0412                   __ptext5 061A                   __ptext6 0568  
                 __ptext7 05E6             ?_set_throttle 0009             _message_start 002F  
    end_of_initialization 05B6                ??_init_XL5 0001         _adc_data_received 0025  
         _drive_dirb_flag 0028                   postinc0 0FEE            ??_set_throttle 000D  
              _start_test 002B          main@forward_flag 0021            __end_of___wmul 05E6  
           __pidataCOMRAM 062C       start_initialization 0598                  ??___wmul 0005  
             __pbssCOMRAM 0022  __end_of_message_received 062C      __end_of_set_throttle 0412  
               __pintcode 0008                  ?___awdiv 0001               __smallconst 0300  
               _drive_dir 002C            ___wmul@product 0005                  _LATBbits 0F8A  
   set_throttle@curr_step 0010        _message_start_flag 0027         ___wmul@multiplier 0001  
                _PWM_init 05E6        _drive_dir_received 0024     set_throttle@step_size 0012  
                __Hrparam 0000                  __Lrparam 0000             set_throttle@i 0016  
                _init_XL5 0568                  isa$xinst 0000                  int$flags 0030  
                main@argc 0018                  main@argv 001A              _set_throttle 0302  
                intlevel2 0000            _spi_slave_init 0602         ?_message_received 0001  
      ??_message_received 0001  set_throttle@forward_flag 0009    __end_of_spi_slave_init 061A  
